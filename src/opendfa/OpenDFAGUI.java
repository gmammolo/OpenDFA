/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package opendfa;

import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import opendfa.GUI.AddMoveGump;
import opendfa.GUI.GestStateGump;
import opendfa.GUI.JLabelNumerated;

/**
 *
 * @author terasud
 */
public class OpenDFAGUI extends javax.swing.JFrame implements Observer {

    private final OpenDFA dfa;
    private String name;

    /**
     * Creates new form OpenDFAGUI
     */
    public OpenDFAGUI(OpenDFA dfa) {
        this.dfa = dfa;
        name = "Nuovo Dfa";
        this.dfa.addObserver(this);
        initComponents();
        reloadTransitionPanel();
        reloadFinalState();
        reloadContent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Edge_Panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        transitionList = new javax.swing.JList<>();
        FinalState_Panel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        finalStateList = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        Content_Panel = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        toJavaText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        toDotText = new javax.swing.JTextArea();
        AddMoveButton = new javax.swing.JButton();
        AddStateButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        addMoveMenuItem = new javax.swing.JMenuItem();
        addFinalStateMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Edge_Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Edge_Panel.setAutoscrolls(true);
        Edge_Panel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Transizioni");

        transitionList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        transitionList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transitionListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(transitionList);

        javax.swing.GroupLayout Edge_PanelLayout = new javax.swing.GroupLayout(Edge_Panel);
        Edge_Panel.setLayout(Edge_PanelLayout);
        Edge_PanelLayout.setHorizontalGroup(
            Edge_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        Edge_PanelLayout.setVerticalGroup(
            Edge_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Edge_PanelLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE))
        );

        FinalState_Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        FinalState_Panel.setAutoscrolls(true);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Stati Finali");

        finalStateList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "q0" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        finalStateList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        finalStateList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                finalStateListMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(finalStateList);

        javax.swing.GroupLayout FinalState_PanelLayout = new javax.swing.GroupLayout(FinalState_Panel);
        FinalState_Panel.setLayout(FinalState_PanelLayout);
        FinalState_PanelLayout.setHorizontalGroup(
            FinalState_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FinalState_PanelLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 81, Short.MAX_VALUE))
            .addComponent(jScrollPane4)
        );
        FinalState_PanelLayout.setVerticalGroup(
            FinalState_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FinalState_PanelLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Content_Panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        toJavaText.setEditable(false);
        toJavaText.setColumns(20);
        toJavaText.setRows(5);
        jScrollPane1.setViewportView(toJavaText);

        Content_Panel.addTab("toJava", jScrollPane1);

        toDotText.setEditable(false);
        toDotText.setColumns(20);
        toDotText.setRows(5);
        jScrollPane2.setViewportView(toDotText);

        Content_Panel.addTab("toDOT", jScrollPane2);

        AddMoveButton.setText("Add Move");
        AddMoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddMoveButtonActionPerformed(evt);
            }
        });

        AddStateButton.setText("Add State");
        AddStateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddStateButton)
                .addGap(18, 18, 18)
                .addComponent(AddMoveButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(Content_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Content_Panel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddMoveButton)
                    .addComponent(AddStateButton)))
        );

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        addMoveMenuItem.setMnemonic('t');
        addMoveMenuItem.setText("Add Move");
        addMoveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMoveMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(addMoveMenuItem);

        addFinalStateMenuItem.setMnemonic('y');
        addFinalStateMenuItem.setText("Add Final State");
        editMenu.add(addFinalStateMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FinalState_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Edge_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Edge_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FinalState_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void addMoveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMoveMenuItemActionPerformed
        this.addMove();
    }//GEN-LAST:event_addMoveMenuItemActionPerformed

    private void AddMoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMoveButtonActionPerformed
        // TODO add your handling code here:
        addMove();
    }//GEN-LAST:event_AddMoveButtonActionPerformed

    private void AddStateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStateButtonActionPerformed
        GestStateGump.generateNewState(dfa, dfa.numState());
    }//GEN-LAST:event_AddStateButtonActionPerformed

    private void finalStateListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finalStateListMouseClicked
        int index = finalStateList.getSelectedIndex();
        GestStateGump.generateNewState(dfa, index);
    }//GEN-LAST:event_finalStateListMouseClicked

    private void transitionListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transitionListMouseClicked
        int index = finalStateList.getSelectedIndex();
        AddMoveGump.generateAddMoveGump(dfa, index);
    }//GEN-LAST:event_transitionListMouseClicked

    private void addMove() {
        AddMoveGump.generateAddMoveGump(dfa);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpenDFAGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpenDFAGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpenDFAGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpenDFAGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OpenDFAGUI(new OpenDFA(1)).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddMoveButton;
    private javax.swing.JButton AddStateButton;
    private javax.swing.JTabbedPane Content_Panel;
    private javax.swing.JPanel Edge_Panel;
    private javax.swing.JPanel FinalState_Panel;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem addFinalStateMenuItem;
    private javax.swing.JMenuItem addMoveMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JList<String> finalStateList;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JTextArea toDotText;
    private javax.swing.JTextArea toJavaText;
    private javax.swing.JList<String> transitionList;
    // End of variables declaration//GEN-END:variables

    public void reloadTransitionPanel() {
        transitionList.removeAll();
         DefaultListModel listModel = new DefaultListModel();
        ArrayList<String> transictionStryngify = dfa.getEdge();
        for(String s: transictionStryngify) {
            listModel.addElement(s);
        }
        transitionList.setModel(listModel);
        transitionList.revalidate();
        transitionList.repaint();
    }

    private void reloadFinalState() {
        finalStateList.removeAll();
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < dfa.numState(); i++) {
            listModel.addElement("q" + i + ((dfa.isFinalState(i)) ? " *" : ""));
        }
        finalStateList.setModel(listModel);
        finalStateList.revalidate();
        finalStateList.repaint();
    }

    @Override
    public void update(Observable o, Object o1) {
        reloadTransitionPanel();
        reloadFinalState();
        reloadContent();
    }

    private void reloadContent() {
        toJavaText.setText(dfa.toJava(name));
        toDotText.setText(dfa.toDot(name));
    }
}
